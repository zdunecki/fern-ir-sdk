/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernIr from "../../..";
export declare type AuthScheme = FernIr.AuthScheme.Bearer | FernIr.AuthScheme.Basic | FernIr.AuthScheme.Header;
export declare namespace AuthScheme {
    interface Bearer extends FernIr.BearerAuthScheme, _Utils {
        type: "bearer";
    }
    interface Basic extends FernIr.BasicAuthScheme, _Utils {
        type: "basic";
    }
    interface Header extends FernIr.HeaderAuthScheme, _Utils {
        type: "header";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernIr.AuthScheme._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        bearer: (value: FernIr.BearerAuthScheme) => _Result;
        basic: (value: FernIr.BasicAuthScheme) => _Result;
        header: (value: FernIr.HeaderAuthScheme) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const AuthScheme: {
    readonly bearer: (value: FernIr.BearerAuthScheme) => FernIr.AuthScheme.Bearer;
    readonly basic: (value: FernIr.BasicAuthScheme) => FernIr.AuthScheme.Basic;
    readonly header: (value: FernIr.HeaderAuthScheme) => FernIr.AuthScheme.Header;
    readonly _visit: <_Result>(value: FernIr.AuthScheme, visitor: FernIr.AuthScheme._Visitor<_Result>) => _Result;
};

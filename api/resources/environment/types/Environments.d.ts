/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernIr from "../../..";
export declare type Environments = FernIr.Environments.SingleBaseUrl | FernIr.Environments.MultipleBaseUrls;
export declare namespace Environments {
    interface SingleBaseUrl extends FernIr.SingleBaseUrlEnvironments, _Utils {
        type: "singleBaseUrl";
    }
    interface MultipleBaseUrls extends FernIr.MultipleBaseUrlsEnvironments, _Utils {
        type: "multipleBaseUrls";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernIr.Environments._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        singleBaseUrl: (value: FernIr.SingleBaseUrlEnvironments) => _Result;
        multipleBaseUrls: (value: FernIr.MultipleBaseUrlsEnvironments) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const Environments: {
    readonly singleBaseUrl: (value: FernIr.SingleBaseUrlEnvironments) => FernIr.Environments.SingleBaseUrl;
    readonly multipleBaseUrls: (value: FernIr.MultipleBaseUrlsEnvironments) => FernIr.Environments.MultipleBaseUrls;
    readonly _visit: <_Result>(value: FernIr.Environments, visitor: FernIr.Environments._Visitor<_Result>) => _Result;
};

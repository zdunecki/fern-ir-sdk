/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernIr from "../../..";
export declare type ErrorDeclarationDiscriminantValue = FernIr.ErrorDeclarationDiscriminantValue.Property | FernIr.ErrorDeclarationDiscriminantValue.StatusCode;
export declare namespace ErrorDeclarationDiscriminantValue {
    interface Property extends FernIr.NameAndWireValue, _Utils {
        type: "property";
    }
    interface StatusCode extends _Utils {
        type: "statusCode";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernIr.ErrorDeclarationDiscriminantValue._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        property: (value: FernIr.NameAndWireValue) => _Result;
        statusCode: () => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ErrorDeclarationDiscriminantValue: {
    readonly property: (value: FernIr.NameAndWireValue) => FernIr.ErrorDeclarationDiscriminantValue.Property;
    readonly statusCode: () => FernIr.ErrorDeclarationDiscriminantValue.StatusCode;
    readonly _visit: <_Result>(value: FernIr.ErrorDeclarationDiscriminantValue, visitor: FernIr.ErrorDeclarationDiscriminantValue._Visitor<_Result>) => _Result;
};

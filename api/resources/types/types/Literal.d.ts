/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernIr from "../../..";
export declare type Literal = FernIr.Literal.String | FernIr.Literal.Boolean;
export declare namespace Literal {
    interface String extends _Utils {
        type: "string";
        string: string;
    }
    interface Boolean extends _Utils {
        type: "boolean";
        boolean: boolean;
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernIr.Literal._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        string: (value: string) => _Result;
        boolean: (value: boolean) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const Literal: {
    readonly string: (value: string) => FernIr.Literal.String;
    readonly boolean: (value: boolean) => FernIr.Literal.Boolean;
    readonly _visit: <_Result>(value: FernIr.Literal, visitor: FernIr.Literal._Visitor<_Result>) => _Result;
};

/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernIr from "../../..";
export declare type JsonResponse = FernIr.JsonResponse.Response | FernIr.JsonResponse.NestedPropertyAsResponse;
export declare namespace JsonResponse {
    interface Response extends FernIr.JsonResponseBody, _Utils {
        type: "response";
    }
    interface NestedPropertyAsResponse extends FernIr.JsonResponseBodyWithProperty, _Utils {
        type: "nestedPropertyAsResponse";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernIr.JsonResponse._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        response: (value: FernIr.JsonResponseBody) => _Result;
        nestedPropertyAsResponse: (value: FernIr.JsonResponseBodyWithProperty) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const JsonResponse: {
    readonly response: (value: FernIr.JsonResponseBody) => FernIr.JsonResponse.Response;
    readonly nestedPropertyAsResponse: (value: FernIr.JsonResponseBodyWithProperty) => FernIr.JsonResponse.NestedPropertyAsResponse;
    readonly _visit: <_Result>(value: FernIr.JsonResponse, visitor: FernIr.JsonResponse._Visitor<_Result>) => _Result;
};

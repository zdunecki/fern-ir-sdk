"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExamplePrimitive = void 0;
const FernIr = __importStar(require("../../.."));
exports.ExamplePrimitive = {
    integer: (value) => {
        return {
            integer: value,
            type: "integer",
            _visit: function (visitor) {
                return FernIr.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    double: (value) => {
        return {
            double: value,
            type: "double",
            _visit: function (visitor) {
                return FernIr.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    string: (value) => {
        return {
            string: value,
            type: "string",
            _visit: function (visitor) {
                return FernIr.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    boolean: (value) => {
        return {
            boolean: value,
            type: "boolean",
            _visit: function (visitor) {
                return FernIr.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    long: (value) => {
        return {
            long: value,
            type: "long",
            _visit: function (visitor) {
                return FernIr.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    datetime: (value) => {
        return {
            datetime: value,
            type: "datetime",
            _visit: function (visitor) {
                return FernIr.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    date: (value) => {
        return {
            date: value,
            type: "date",
            _visit: function (visitor) {
                return FernIr.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    uuid: (value) => {
        return {
            uuid: value,
            type: "uuid",
            _visit: function (visitor) {
                return FernIr.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case "integer":
                return visitor.integer(value.integer);
            case "double":
                return visitor.double(value.double);
            case "string":
                return visitor.string(value.string);
            case "boolean":
                return visitor.boolean(value.boolean);
            case "long":
                return visitor.long(value.long);
            case "datetime":
                return visitor.datetime(value.datetime);
            case "date":
                return visitor.date(value.date);
            case "uuid":
                return visitor.uuid(value.uuid);
            default:
                return visitor._other(value);
        }
    },
};

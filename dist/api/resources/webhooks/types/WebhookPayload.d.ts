/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernIr from "../../..";
export declare type WebhookPayload = FernIr.WebhookPayload.InlinedPayload | FernIr.WebhookPayload.Reference;
export declare namespace WebhookPayload {
    interface InlinedPayload extends FernIr.InlinedWebhookPayload, _Utils {
        type: "inlinedPayload";
    }
    interface Reference extends FernIr.WebhookPayloadReference, _Utils {
        type: "reference";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernIr.WebhookPayload._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        inlinedPayload: (value: FernIr.InlinedWebhookPayload) => _Result;
        reference: (value: FernIr.WebhookPayloadReference) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const WebhookPayload: {
    readonly inlinedPayload: (value: FernIr.InlinedWebhookPayload) => FernIr.WebhookPayload.InlinedPayload;
    readonly reference: (value: FernIr.WebhookPayloadReference) => FernIr.WebhookPayload.Reference;
    readonly _visit: <_Result>(value: FernIr.WebhookPayload, visitor: FernIr.WebhookPayload._Visitor<_Result>) => _Result;
};

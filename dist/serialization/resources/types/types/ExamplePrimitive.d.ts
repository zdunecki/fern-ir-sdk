/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";
export declare const ExamplePrimitive: core.serialization.Schema<serializers.ExamplePrimitive.Raw, FernIr.ExamplePrimitive>;
export declare namespace ExamplePrimitive {
    type Raw = ExamplePrimitive.Integer | ExamplePrimitive.Double | ExamplePrimitive.String | ExamplePrimitive.Boolean | ExamplePrimitive.Long | ExamplePrimitive.Datetime | ExamplePrimitive.Date | ExamplePrimitive.Uuid;
    interface Integer {
        type: "integer";
        integer: number;
    }
    interface Double {
        type: "double";
        double: number;
    }
    interface String {
        type: "string";
        string: serializers.EscapedString.Raw;
    }
    interface Boolean {
        type: "boolean";
        boolean: boolean;
    }
    interface Long {
        type: "long";
        long: number;
    }
    interface Datetime {
        type: "datetime";
        datetime: string;
    }
    interface Date {
        type: "date";
        date: string;
    }
    interface Uuid {
        type: "uuid";
        uuid: string;
    }
}

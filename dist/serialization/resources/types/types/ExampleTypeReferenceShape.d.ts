/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";
export declare const ExampleTypeReferenceShape: core.serialization.Schema<serializers.ExampleTypeReferenceShape.Raw, FernIr.ExampleTypeReferenceShape>;
export declare namespace ExampleTypeReferenceShape {
    type Raw = ExampleTypeReferenceShape.Primitive | ExampleTypeReferenceShape.Container | ExampleTypeReferenceShape.Unknown | ExampleTypeReferenceShape.Named;
    interface Primitive {
        type: "primitive";
        primitive: serializers.ExamplePrimitive.Raw;
    }
    interface Container {
        type: "container";
        container: serializers.ExampleContainer.Raw;
    }
    interface Unknown {
        type: "unknown";
        unknown?: unknown;
    }
    interface Named extends serializers.ExampleNamedType.Raw {
        type: "named";
    }
}

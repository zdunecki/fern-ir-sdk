/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";
export declare const ContainerType: core.serialization.Schema<serializers.ContainerType.Raw, FernIr.ContainerType>;
export declare namespace ContainerType {
    type Raw = ContainerType.List | ContainerType.Map | ContainerType.Optional | ContainerType.Set | ContainerType.Literal;
    interface List {
        _type: "list";
        list: serializers.TypeReference.Raw;
    }
    interface Map extends serializers.MapType.Raw {
        _type: "map";
    }
    interface Optional {
        _type: "optional";
        optional: serializers.TypeReference.Raw;
    }
    interface Set {
        _type: "set";
        set: serializers.TypeReference.Raw;
    }
    interface Literal {
        _type: "literal";
        literal: serializers.Literal.Raw;
    }
}

/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";
export declare const ResolvedTypeReference: core.serialization.Schema<serializers.ResolvedTypeReference.Raw, FernIr.ResolvedTypeReference>;
export declare namespace ResolvedTypeReference {
    type Raw = ResolvedTypeReference.Container | ResolvedTypeReference.Named | ResolvedTypeReference.Primitive | ResolvedTypeReference.Unknown;
    interface Container {
        _type: "container";
        container: serializers.ContainerType.Raw;
    }
    interface Named extends serializers.ResolvedNamedType.Raw {
        _type: "named";
    }
    interface Primitive {
        _type: "primitive";
        primitive: serializers.PrimitiveType.Raw;
    }
    interface Unknown {
        _type: "unknown";
    }
}
